extend type Mutation {
  createGraphQlEndpoint(input: GraphQlEndpointCreationInput!): GraphQlEndpointCreationResponse!
  updateGraphQlEndpoint(input: GraphQlEndpointUpdateInput!): GraphQlEndpointUpdateResponse!
}

type GraphQlEndpoint implements IEndpoint {
  id: ID!
  name: String!
  address: String!
  schema: String!
  httpVersion: String
  connectTimeout: Int
  readTimeout: Int
}

union GraphQlEndpointCreationResponse = GraphQlEndpointCreationPayload | GraphQlEndpointCreationErrors

type GraphQlEndpointCreationPayload {
  graphQlEndpoint: GraphQlEndpoint!
}

type GraphQlEndpointCreationErrors {
  errors: [GraphQlEndpointCreationError!]!
}

union GraphQlEndpointCreationError = GraphQlEndpointErrorBadSchema | EndpointErrorDuplicatingName | EndpointErrorEmptyName

union GraphQlEndpointUpdateResponse = GraphQlEndpointUpdatePayload | GraphQlEndpointUpdateErrors

type GraphQlEndpointUpdatePayload {
  graphQlEndpoint: GraphQlEndpoint!
}

type GraphQlEndpointUpdateErrors {
  errors: [GraphQlEndpointUpdateError!]!
}

union GraphQlEndpointUpdateError = GraphQlEndpointErrorBadSchema | EndpointErrorUnknownId | EndpointErrorDuplicatingName | EndpointErrorEmptyName | EndpointErrorConcurrentModification

type GraphQlEndpointErrorBadSchema implements IError {
  message: String!
  schema: String!
  errors: [GraphQLError!]!
}

input GraphQlEndpointCreationInput {
  name: String!
  address: String!
  schema: String!
  httpVersion: String
  connectTimeout: Int
  readTimeout: Int
}

input GraphQlEndpointUpdateInput {
  id: ID!
  name: String
  address: String
  schema: String
  httpVersion: String
  connectTimeout: Int
  readTimeout: Int
}
